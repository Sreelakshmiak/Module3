package com.ust.rest.services;

import java.util.ArrayList;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ust.rest.repository.ProductRepository;
import com.ust.rest.repository.UserRepository;
import com.ust.rest.resource.Product;
import com.ust.rest.resource.User;

@Service
public class ProductService {

	@Autowired

ProductRepository productRepository;
	@Autowired
	UserRepository userRepository;
	public Product getProduct(long productId) {
		Optional<Product> optional =productRepository.findById(productId);
		if(optional.isPresent())
			return optional.get();
		else
			return null;
		}



	
//public Product getProduct(long productId) {
//	return repository.getProduct(productId);
//}
//
//public ArrayList<Product> getProducts()
//{
//	return repository.getProducts();
//}
//
	
	@Transactional
public boolean add(Product product)
{
//	if(validate(product)) {
//		repository.save(product);
//		return false;
//	}else {
//		repository.save(product);
//		return true;
//	}
		productRepository.save(product);
		User user = new User();
		user.setdateTime(System.currentTimeMillis() + " ");
		userRepository.save(user);
		return true;
	
}

public boolean validate(Product product)
{
	if(product.getName().equals("AC"))
	{
		return true;
	}
	else {
		return false;
	}
}
//public Product updateProduct(Product product) {
//	return repository.updateProduct(product);
//}t
//public void deleteProduct(long productId) {
//	 repository.delete(productId);
//}
}

